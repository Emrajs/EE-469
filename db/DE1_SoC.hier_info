|alu_1bit
a => and1.IN0
a => or1.IN0
a => fullAdder_1bit:submodule1.a
a => mux_4_1:submodule2.in[0]
b => and1.IN1
b => or1.IN1
b => fullAdder_1bit:submodule1.b
out <= mux_4_1:submodule2.out
Cin => fullAdder_1bit:submodule1.Cin
Cout <= fullAdder_1bit:submodule1.Cout
en[0] => mux_4_1:submodule2.sel[0]
en[1] => mux_4_1:submodule2.sel[1]


|alu_1bit|fullAdder_1bit:submodule1
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
b => mux2_1:subtractor.in[1]
b => mux2_1:subtractor.in[0]
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
sel => mux2_1:subtractor.sel
Cin => xor2.IN1
Cin => and1.IN1
Cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu_1bit|fullAdder_1bit:submodule1|mux2_1:subtractor
in[0] => and1.IN0
in[1] => and2.IN0
sel => and2.IN1
sel => and1.IN1
out <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu_1bit|mux_4_1:submodule2
in[0] => and1.IN0
in[1] => and2.IN0
in[2] => and3.IN0
in[3] => and4.IN0
sel[0] => and2.IN1
sel[0] => and4.IN1
sel[0] => and1.IN1
sel[0] => and3.IN1
sel[1] => and3.IN2
sel[1] => and4.IN2
sel[1] => and1.IN2
sel[1] => and2.IN2
out <= or1.DB_MAX_OUTPUT_PORT_TYPE


